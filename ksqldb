--stream products
CREATE STREAM SOURCE_PRODUCTS WITH (KAFKA_TOPIC='test.store.products', VALUE_FORMAT='AVRO');

CREATE STREAM TARGET_PRODUCTS WITH (KAFKA_TOPIC='target_products', VALUE_FORMAT='AVRO') 
AS SELECT 'product::'+ CAST(AFTER->PRODUCTID AS VARCHAR)  KEY,
AFTER->PRODUCTID AS "productId", AFTER->PRODUCTNAME AS "productName",
  ROUND(AFTER->PRICE,2) AS "price" FROM SOURCE_PRODUCTS
  EMIT CHANGES;


-- stream customers
 CREATE STREAM SOURCE_CUSTOMERS WITH (KAFKA_TOPIC='test.store.customers', VALUE_FORMAT='AVRO');

CREATE STREAM TARGET_CUSTOMERS WITH (KAFKA_TOPIC='target_customers', VALUE_FORMAT='AVRO') 
AS SELECT 'customer::'+ CAST(AFTER->CUSTOMERID AS VARCHAR)  KEY,
AFTER->CUSTOMERID AS "customerId", AFTER->FIRSTNAME AS "firstName",
AFTER->LASTNAME AS "lastName", AFTER->PHONE AS "phone", AFTER->EMAIL AS "email" , 
AFTER->ADDRESS AS "address" FROM SOURCE_CUSTOMERS
EMIT CHANGES;


-- stream orders
CREATE STREAM SOURCE_ORDERS WITH (KAFKA_TOPIC='test.store.orders', VALUE_FORMAT='AVRO');
CREATE STREAM TARGET_ORDERS WITH (KAFKA_TOPIC='target_orders', VALUE_FORMAT='AVRO') 
AS SELECT 'order::'+ CAST(AFTER->ORDERID AS VARCHAR)  KEY,
AFTER->ORDERID AS "orderId",AFTER->CUSTOMERID AS "customerId",
AFTER->ORDERSTATUS AS "orderStatus",
AFTER->ORDERDATE AS "orderDate"
FROM SOURCE_ORDERS
EMIT CHANGES;

--stream order_items
CREATE STREAM SOURCE_ORDER_ITEMS WITH (KAFKA_TOPIC='test.store.order_items', VALUE_FORMAT='AVRO');
CREATE STREAM TARGET_ORDER_ITEMS WITH (KAFKA_TOPIC='target_order_items', VALUE_FORMAT='AVRO') 
AS SELECT 'order_items::'+ CAST(AFTER->ORDERID AS VARCHAR) + '::' +  CAST(AFTER->ITEMID AS VARCHAR) KEY,
AFTER->ORDERID AS "orderId",
AFTER->ITEMID AS "itemId",
AFTER->PRODUCTID AS "productId",
AFTER->QUANTITY AS "quantity",
ROUND(AFTER->PRICE,2) AS "price"
FROM SOURCE_ORDER_ITEMS
EMIT CHANGES;

